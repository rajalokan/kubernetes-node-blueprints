tosca_definitions_version: cloudify_dsl_1_3

inputs:

  labels:
    default: {}

  bootstrap_token:
    default: { get_secret: bootstrap_token }

  bootstrap_hash:
    type: string
    default: { get_secret: bootstrap_hash }

  private_master_ip:
    type: string
    default: { get_secret: kubernetes_master_ip }

  public_master_ip:
    description: >
      The public ip address of the master kubernetes host

  master_port:
    type: string
    default: { get_secret: kubernetes_master_port }


node_types:

  cloudify.nodes.Kubernetes.Node:
    derived_from: cloudify.nodes.Root
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: scripts/kubernetes_node/create.py
        configure:
          implementation: scripts/kubernetes_node/configure.py
          inputs:
            bootstrap_token:
              default: { get_input: bootstrap_token }
            bootstrap_hash:
              default: { get_input: bootstrap_hash }
            master_ip:
              default: { get_input: private_master_ip }
            public_master_ip:
              default: { get_input: public_master_ip }
            master_port:
              default: { get_input: master_port }
        start:
          implementation: fabric.fabric_plugin.tasks.run_task
          inputs:
            tasks_file:
              default: scripts/kubernetes_node/tasks.py
            task_name:
              default: label_node
            task_properties:
              default:
                hostname: { get_attribute: [ SELF, hostname ] }
                labels: { get_input: labels }
            fabric_env:
              default:
                host_string: { get_attribute: [ SELF, public_master_ip ] }
                user: { get_input: agent_user }
                key: { get_secret: agent_key_private }
                warn_only: True
        stop:
          implementation: fabric.fabric_plugin.tasks.run_task
          inputs:
            tasks_file:
              default: scripts/kubernetes_node/tasks.py
            task_name:
              default: stop_node
            task_properties:
              default:
                hostname: { get_attribute: [ SELF, hostname ] }
            fabric_env:
              default:
                host_string: { get_attribute: [ SELF, public_master_ip ] }
                user: { get_input: agent_user }
                key: { get_secret: agent_key_private }
                warn_only: True
        delete:
          implementation: fabric.fabric_plugin.tasks.run_task
          inputs:
            tasks_file:
              default: scripts/kubernetes_node/tasks.py
            task_name:
              default: delete_node
            task_properties:
              default:
                hostname: { get_attribute: [ SELF, hostname ] }
            fabric_env:
              default:
                host_string: { get_attribute: [ SELF, public_master_ip ] }
                user: { get_input: agent_user }
                key: { get_secret: agent_key_private }
                warn_only: True

  cloudify.nodes.ApplicationServer.kubernetes.Node:
    derived_from: cloudify.nodes.Root
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          # set ip and hostname and setup services
          implementation: scripts/kubernetes_services/create.py
          inputs:
            cfy_user:
              default: { get_secret: cfy_user }
            cfy_password:
              default: { get_secret: cfy_password }
            cfy_tenant:
              default: { get_secret: cfy_tenant }
            agent_user:
              default: { get_input: agent_user }
            full_install:
              default: no
      maintenance:
        mount:
          implementation: scripts/kubernetes_services/mount.py
        unmount:
          implementation: scripts/kubernetes_services/unmount.py

  cloudify.nodes.Kubernetes.build_node:
    derived_from: cloudify.nodes.SoftwareComponent
    properties:
      full_install:
        default: no
      linux_distro:
        default: centos
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: scripts/buildtools/create.py
        configure:
          implementation: scripts/buildtools/configure.py
        start:
          implementation: scripts/buildtools/start.py


node_templates:

  kubernetes_node:
    type: cloudify.nodes.Kubernetes.Node
    relationships:
      - type: cloudify.relationships.contained_in
        target: kubernetes_node_services

  kubernetes_node_services:
    type: cloudify.nodes.ApplicationServer.kubernetes.Node
    relationships:
    - target: k8s_node_host
      type: cloudify.relationships.contained_in
    - target: kubernetes_node_build
      type: cloudify.relationships.depends_on

  kubernetes_node_build:
    type: cloudify.nodes.Kubernetes.build_node
    relationships:
    - target: k8s_node_host
      type: cloudify.relationships.contained_in


# policy_types:
#   scale_policy_type:
#     source: policies/scale.clj
#     properties:
#       policy_operates_on_group:
#         default: true
#       service_selector:
#         description: regular expression that selects the metric to be measured
#         default: ".*"
#       moving_window_size:
#         description: the moving window for individual sources in secs
#         default: 10
#       scale_threshold:
#         description: the value to trigger scaling over aggregrated moving values
#       scale_limit:
#         description: scaling limit
#         default: 10
#       scale_direction:
#         description: scale up ('<') or scale down ('>')
#         default: '<'
#       cooldown_time:
#         description: the time to wait before evaluating again after a scale
#         default: 60
#
# groups: {}
